# This configuration was automatically generated from a CircleCI 1.0 config.
# It should include any build commands you had along with commands that CircleCI
# inferred from your project structure. We strongly recommend you read all the
# comments in this file to understand the structure of CircleCI 2.0, as the idiom
# for configuration has changed substantially in 2.0 to allow arbitrary jobs rather
# than the prescribed lifecycle of 1.0. In general, we recommend using this generated
# configuration as a reference rather than using it in production, though in most
# cases it should duplicate the execution of your original 1.0 config.
version: 2
jobs:
  build:
    working_directory: ~/jesselumarie/jesselumarie.com
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
    - image: circleci/python:3.7.4
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - restore_cache:
        keys:
        - v1-dep-{{ .Branch }}-
        - v1-dep-master-
        - v1-dep-
    - run: sudo pip install pelican markdown s3cmd
    - run: git clone https://github.com/jesselumarie/jesselumarie.com.git
    - run: echo -e "[default] \naccess_key = $S3CFG_ACCESS_KEY \nsecret_key = $S3CFG_SECRET_KEY \n" > /home/circleci/.s3cfg
    - run: adfasfasdf
    # Save dependency cache
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        # This is a broad list of cache paths to include many possible development environments
        # You can probably delete some of these entries
        - ~/virtualenvs
        - ~/.bundle
        - ~/.cache/bower
    - run: echo 'static site; no tests'
    - store_test_results:
        path: /tmp/circleci-test-results
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: /tmp/circleci-test-results
  deploy:
    docker:
      - image: circleci/python:3.7.4
    working_directory: ~/jesselumarie.com
    steps:
      - run:
          name: Create directory
          command: mkdir -p s3_assets_to_deploy/blog
      - run:
          name: Make blog html
          command: cd blog && make html
      - run:
          name: Copy files
          command: cp -r blog/output/* s3_assets_to_deploy/blog; cp -r landing_page/* s3_assets_to_deploy
      - run:
          name: Go to deploy directory
          command: cd s3_assets_to_deploy
      - run:
          name: Sync with S3
          command: aws s3 sync s3_assets_to_deploy/ s3://jesselumarie.com --delete
      - run:
          name: Invalidate cache
          command: aws configure set preview.cloudfront true; aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_ID --paths '/*';

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: circleci-20-test
